{"version":3,"file":"Logger.js","sourceRoot":"","sources":["Logger.ts"],"names":[],"mappings":";;AAAA,yCAAqE;AACrE,IAAM,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAEzC,IAAc,MAAM,CAInB;AAJD,WAAc,MAAM;IAChB,SAAgB,GAAG,CAAC,OAAO,EAAE,IAAI;QAC7B,gBAAgB,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;IACvD,CAAC;IAFe,UAAG,MAElB,CAAA;AACL,CAAC,EAJa,MAAM,GAAN,cAAM,KAAN,cAAM,QAInB;AAED,IAAO,gBAAgB,CAmBtB;AAnBD,WAAO,gBAAgB;IACnB,SAAgB,mBAAmB,CAAC,OAAO,EAAE,IAAI;QAC7C,QAAO,IAAI,EAAE;YACT,KAAK,qBAAS,CAAC,KAAK;gBAChB,IAAG,MAAM,CAAC,QAAQ,KAAK,qBAAS,CAAC,KAAK,EAAE;oBACpC,OAAO,CAAC,GAAG,CAAE,2BAAe,CAAC,EAAE,CAAC,OAAO,GAAG,sBAAU,GAAG,OAAO,GAAG,2BAAe,CAAC,KAAK,CAAC,CAAC;iBAC3F;gBACD,MAAM;YACV,KAAK,qBAAS,CAAC,KAAK;gBAChB,OAAO,CAAC,GAAG,CAAE,2BAAe,CAAC,EAAE,CAAC,GAAG,GAAG,sBAAU,GAAG,OAAO,GAAG,2BAAe,CAAC,KAAK,CAAC,CAAC;gBACpF,MAAM;YACV,KAAK,qBAAS,CAAC,IAAI;gBACf,OAAO,CAAC,GAAG,CAAE,2BAAe,CAAC,EAAE,CAAC,MAAM,GAAG,sBAAU,GAAG,OAAO,GAAG,2BAAe,CAAC,KAAK,CAAC,CAAC;gBACvF,MAAM;YACV,KAAK,qBAAS,CAAC,GAAG;gBACd,OAAO,CAAC,GAAG,CAAE,2BAAe,CAAC,EAAE,CAAC,IAAI,GAAG,sBAAU,GAAG,OAAO,GAAG,2BAAe,CAAC,KAAK,CAAC,CAAC;gBACrF,MAAM;SACb;IACL,CAAC;IAjBe,oCAAmB,sBAiBlC,CAAA;AACL,CAAC,EAnBM,gBAAgB,KAAhB,gBAAgB,QAmBtB","sourcesContent":["import { LOG_TYPES, LOG_PREFIX, COLOR_REFERENCE } from \"./Constants\";\nconst config = require('../Config.json');\n\nexport module Logger {\n    export function Log(message, type): void {\n        MessengerFactory.writeConsoleMessage(message, type)\n    }\n}\n\nmodule MessengerFactory {\n    export function writeConsoleMessage(message, type): void {\n        switch(type) {\n            case LOG_TYPES.DEBUG:\n                if(config.logLevel === LOG_TYPES.DEBUG) {\n                    console.log( COLOR_REFERENCE.fg.Crimson + LOG_PREFIX + message + COLOR_REFERENCE.Reset);\n                }\n                break;\n            case LOG_TYPES.ERROR:\n                console.log( COLOR_REFERENCE.fg.Red + LOG_PREFIX + message + COLOR_REFERENCE.Reset);\n                break;\n            case LOG_TYPES.WARN:\n                console.log( COLOR_REFERENCE.fg.Yellow + LOG_PREFIX + message + COLOR_REFERENCE.Reset);\n                break;\n            case LOG_TYPES.LOG:\n                console.log( COLOR_REFERENCE.fg.Blue + LOG_PREFIX + message + COLOR_REFERENCE.Reset);\n                break;\n        }\n    }\n}"]}