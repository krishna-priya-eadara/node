{"version":3,"file":"server.js","sourceRoot":"","sources":["server.ts"],"names":[],"mappings":"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","sourcesContent":["const WebSocketServer = require('ws').Server;\nconst config = require('../Config.json');\n\nconst CONSTANTS = {\n    DEBUG: 'debug',\n    WARN: 'warn',\n    ERROR: 'error',\n    LOG: 'log'\n};\nconst COLOR_REFERENCE = {\n    Reset: \"\\x1b[0m\",\n    Bright: \"\\x1b[1m\",\n    Dim: \"\\x1b[2m\",\n    Underscore: \"\\x1b[4m\",\n    Blink: \"\\x1b[5m\",\n    Reverse: \"\\x1b[7m\",\n    Hidden: \"\\x1b[8m\",\n    fg: {\n        Black: \"\\x1b[30m\",\n        Red: \"\\x1b[31m\",\n        Green: \"\\x1b[32m\",\n        Yellow: \"\\x1b[33m\",\n        Blue: \"\\x1b[34m\",\n        Magenta: \"\\x1b[35m\",\n        Cyan: \"\\x1b[36m\",\n        White: \"\\x1b[37m\",\n        Crimson: \"\\x1b[38m\"\n    },\n    bg: {\n        Black: \"\\x1b[40m\",\n        Red: \"\\x1b[41m\",\n        Green: \"\\x1b[42m\",\n        Yellow: \"\\x1b[43m\",\n        Blue: \"\\x1b[44m\",\n        Magenta: \"\\x1b[45m\",\n        Cyan: \"\\x1b[46m\",\n        White: \"\\x1b[47m\",\n        Crimson: \"\\x1b[48m\"\n    }\n};\nconst SOCKET_EVENTS = [\n    'message',\n    'error',\n    'close'\n];\n\nconst LOG_PREFIX = '[SOCKET SERVER]:: ';\n\nconst getUniqueID = function () {\n    let dt = new Date().getTime();\n    let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        let r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n\n        return (c=='x' ? r :(r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n};\n\nclass ServerUtilities {\n    static clients: Array<any> = [];\n    static games: object;\n\n    static message(message) {\n        socketMessageFactory.processClientRequest(this, message);\n    }\n    static error(error) {\n        Logger.Log('Client connection error ' + this[\"id\"] + '!!' + '\\nError message: ' + error, CONSTANTS.LOG);\n    }\n    static close() {\n        delete ServerUtilities.clients[this[\"id\"]];\n        Logger.Log('Client terminated ' + this[\"id\"] + ' port!!', CONSTANTS.LOG);\n    }\n\n    static subscribe(context, eventName) {\n\n    }\n    static socketMessageListenerInit(socket) {\n        socket.on('connection', function(clientSocket) {\n            clientSocket[\"id\"] = getUniqueID();\n            ServerUtilities.clients[clientSocket[\"id\"]] = clientSocket;\n            SOCKET_EVENTS.forEach((event) => {\n                clientSocket.on(event, ServerUtilities[event].bind(clientSocket));\n            });\n        });\n    }\n}\n\nclass socketMessageFactory {\n    static processClientRequest(socketConnection, data) {\n        data = JSON.parse(data);\n        switch(data.event) {\n            case 'clientInit' :\n                Logger.Log('Client connected ' + data.name + ' !!', CONSTANTS.LOG);\n                ServerUtilities.clients[socketConnection[\"id\"]].name = data.name;\n                break;\n            case 'refreshConnections':\n                let availableConnections = [];\n                ServerUtilities.clients.forEach((item) => {\n                    if(item.id !== socketConnection.id) {\n                        availableConnections.push({\n                            name: item.name,\n                            id: item.id\n                        });\n                    }\n                });\n                socketConnection.send(JSON.stringify(availableConnections))\n                break;\n            case 'requestGame':\n                let opponent = ServerUtilities.clients[data.requestOpponent.id];\n                opponent.send(JSON.stringify({\n                    'event': 'requestGame',\n                    'requestOpponent': {\n                        'name': socketConnection.name,\n                        'id': socketConnection.id\n                    }\n                }));\n                break;\n            case 'acceptGame':\n                let requestedOpponent = ServerUtilities.clients[data.requestOpponent.id];\n                let gameDetails = {\n                    'player1': {\n                        'name': socketConnection.name,\n                        'id': socketConnection.id,\n                        'symbol': 'X',\n                        'shallStart': true\n                    },\n                    'player2': {\n                        'name': requestedOpponent.name,\n                        'id': requestedOpponent.id,\n                        'symbol': 'O',\n                        'shallStart': false\n                    },\n                    'data': [[null, null, null],[null, null, null],[null, null, null]]\n                };\n                ServerUtilities.games[getUniqueID()] = gameDetails;\n                socketConnection.send(JSON.stringify({\n                    'event': 'gameInit',\n                    ...gameDetails\n                }));\n                requestedOpponent.send(JSON.stringify({\n                    'event': 'gameInit',\n                    ...gameDetails\n                }));\n\n                break;\n            case 'gameEvent':\n                let cellData = data.playerdata.cellData;\n                let game = ServerUtilities.games[data.playerdata.gameid];\n                game.data[cellData.row][cellData.column] = cellData.symbol;\n                let enabledClient = game.players.player1.id;\n                if(game.players.player1.id === socketConnection.id) {\n                    enabledClient = game.players.player2.id;\n                }\n                ServerUtilities.clients[game.players.player1].send(JSON.stringify({\n                    'event': 'gameInit',\n                    'data': game.data,\n                    'enabledClientId': enabledClient\n                }));\n                ServerUtilities.clients[game.players.player2].send(JSON.stringify({\n                    'event': 'gameInit',\n                    'data': game.data,\n                    'enabledClientId': enabledClient\n                }));\n                break;\n        }\n    }\n}\n\nclass Logger {\n    static Log(message, type) {\n        MessengerFactory.writeConsoleMessage(message, type)\n    }\n}\n\nclass MessengerFactory {\n    static writeConsoleMessage(message, type) {\n        switch(type) {\n            case CONSTANTS.DEBUG:\n                if(config.logLevel === CONSTANTS.DEBUG) {\n                    console.log( COLOR_REFERENCE.fg.Crimson + LOG_PREFIX + message + COLOR_REFERENCE.Reset);\n                }\n                break;\n            case CONSTANTS.ERROR:\n                console.log( COLOR_REFERENCE.fg.Red + LOG_PREFIX + message + COLOR_REFERENCE.Reset);\n                break;\n            case CONSTANTS.WARN:\n                console.log( COLOR_REFERENCE.fg.Yellow + LOG_PREFIX + message + COLOR_REFERENCE.Reset);\n                break;\n            case CONSTANTS.LOG:\n                console.log( COLOR_REFERENCE.fg.Blue + LOG_PREFIX + message + COLOR_REFERENCE.Reset);\n                break;\n        }\n    }\n}\n\nexport class Server {\n    portNumber: number;\n    private _connection: any;\n    private _listenTo: any;\n\n    constructor(port) {\n        this.portNumber = port;\n    }\n    on() {\n        this._connection = new WebSocketServer({port: this.portNumber});\n        ServerUtilities.socketMessageListenerInit(this._connection);\n        Logger.Log('Socket started at ' + this.portNumber + ' port!!', CONSTANTS.LOG);\n    }\n    off() {\n        this._connection.close();\n    }\n    listenTo(eventName) {\n        ServerUtilities.subscribe(this, eventName);\n    }\n}\n\n"]}